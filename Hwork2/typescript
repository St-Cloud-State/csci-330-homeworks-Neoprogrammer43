Script started on 2025-02-05 05:53:22+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="150" LINES="13"]
[0;32m@Neoprogrammer43 [0mâžœ [1;34m/workspaces/csci-330-homeworks-Neoprogrammer43/Hwork2 [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (NOT (EQUAL 3 (ABS -3)))

NIL
* (/ (+ 8 12) 2)

10
* (+ (* 3 3) (* 4 4))

25
* (defun MILES-PER-GALLON (INITIAL-ODOMETER-READING FINAL-ODOMETER-READING GALLONS-CONSUMED)
  (/ (- FINAL-ODOMETER-READING INITIAL-ODOMETER-READING) GALLONS-CONSUMED))

MILES-PER-GALLON
* (third '(the quick brown fox))

BROWN
* (list 2 'and 2 'is 4)

(2 AND 2 IS 4)
* (+ 1 (length (list t t t t)))

5
* (cons 'patrick '(seymour marvin))

(PATRICK SEYMOUR MARVIN)
* (cons 'patrick (list 'seymour 'marvin))

(PATRICK SEYMOUR MARVIN)
* (mystery â€™(dancing bear))
; in: MYSTERY â€™
;     (DANCING BEAR)
; 
; caught WARNING:
;   undefined variable: BEAR
; 
; caught STYLE-WARNING:
;   undefined function: DANCING

;     (MYSTERY â€™ (DANCING BEAR))
; 
; caught STYLE-WARNING:
;   undefined function: MYSTERY
; 
; caught WARNING:
;   undefined variable: â€™
; 
; compilation unit finished
;   Undefined functions:
;     DANCING MYSTERY
;   Undefined variables:
;     BEAR â€™
;   caught 2 WARNING conditions
;   caught 2 STYLE-WARNING conditions

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable â€™ is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

((LAMBDA ()))
   source: (MYSTERY â€™ (DANCING BEAR))
0] (defun mystery (x)
(list (second x) (first x)))
; in: DEFUN MYSTERY
;     (DEFUN MYSTERY (X) (LIST (SECOND X) (FIRST X)))
; --> PROGN SB-IMPL::%DEFUN SB-INT:NAMED-LAMBDA 
; ==>
;   #'(SB-INT:NAMED-LAMBDA MYSTERY
;         (X)
;       (BLOCK MYSTERY (LIST (SECOND X) (FIRST X))))
; 
; caught STYLE-WARNING:
;   (The function was previously called with two arguments, but wants at most one.)
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
MYSTERY
0] (mystery â€™(dancing bear))
; in: MYSTERY â€™
;     (MYSTERY â€™ (DANCING BEAR))
; 
; caught STYLE-WARNING:
;   The function was called with two arguments, but wants exactly one.
; in: MYSTERY â€™
;     (DANCING BEAR)
; 
; caught WARNING:
;   undefined variable: BEAR
; 
; caught STYLE-WARNING:
;   undefined function: DANCING

;     (MYSTERY â€™ (DANCING BEAR))
; 
; caught WARNING:
;   undefined variable: â€™
; 
; compilation unit finished
;   Undefined function:
;     DANCING
;   Undefined variables:
;     BEAR â€™
;   caught 2 WARNING conditions
;   caught 2 STYLE-WARNING conditions

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable â€™ is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

((LAMBDA (#:G390)) #<unused argument>)
   source: (MYSTERY â€™ (DANCING BEAR))
0[2] (defun mystery (x) (list (dse   second x) (first x)))

WARNING: redefining COMMON-LISP-USER::MYSTERY in DEFUN
MYSTERY
0[2] (mystery 'd (dancing bear))

(BEAR DANCING)
0[2] (mystery 'dancing 'bear)
; in: MYSTERY â€™
;     (MYSTERY 'DANCING 'BEAR)
; 
; caught STYLE-WARNING:
;   The function was called with two arguments, but wants exactly one.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

debugger invoked on a SB-INT:SIMPLE-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  invalid number of arguments: 2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 2).
  1:         Reduce debugger level (to debug level 1).
  2:         Exit debugger, returning to top level.

(MYSTERY DANCING BEAR) [external]
   source: (DEFUN MYSTERY (X) (LIST (SECOND X) (FIRST X)))
0[3] (mystery '(zowie))

(NIL ZOWIE)
0[3] (mysery     tery (list 'first 'second))

(SECOND FIRST)
0[3] (defun speak (x y) (list â€™all x â€™is y))
; in: DEFUN SPEAK
;     (LIST â€™ALL X â€™IS Y)
; 
; caught WARNING:
;   undefined variable: â€™ALL
; 
; caught WARNING:
;   undefined variable: â€™IS
; 
; compilation unit finished
;   Undefined variables:
;     â€™ALL â€™IS
;   caught 2 WARNING conditions
SPEAK
0[3] (defun speak (x y) (list 'all x 'is y))

WARNING: redefining COMMON-LISP-USER::SPEAK in DEFUN
SPEAK
0[3] (list â€™cons t nil)
; in: MYSTERY â€™
;     (LIST â€™CONS T NIL)
; 
; caught WARNING:
;   undefined variable: â€™CONS
; 
; compilation unit finished
;   Undefined variable:
;     â€™CONS
;   caught 1 WARNING condition

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable â€™CONS is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 3).
  1:         Reduce debugger level (to debug level 2).
  2:         Reduce debugger level (to debug level 1).
  3:         Exit debugger, returning to top level.

((LAMBDA (#:G398)) #<unused argument>)
   source: (LIST â€™CONS T NIL)
0[4] (list 'cons t nil)

(CONS T NIL)
0[4] (eval (list 'cons t nil))

(T)
0[4] (eval (eval (list 'cons t nil)))
; in: T
;     (T)
; 
; caught WARNING:
;   The function T is undefined, and its name is reserved by ANSI CL so that even
;   if it were defined later, the code doing so would not be portable.
; 
; compilation unit finished
;   Undefined function:
;     T
;   caught 1 WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP:T is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 4).
  1:         Reduce debugger level (to debug level 3).
  2:         Reduce debugger level (to debug level 2).
  3:         Reduce debugger level (to debug level 1).
  4:         Exit debugger, returning to top level.

("undefined function")
0[5] (apply #'cons '(t nil))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(T)
0[5] (e  (eval nil)
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
NIL
0[5] (list 'eval nil)
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
(EVAL NIL)
0[5] (eval (list 'eval nil))
; No debug variables for current frame: using EVAL instead of EVAL-IN-FRAME.
NIL
0[5] 
0[4] 
0[3] (EXIT)
[0;32m@Neoprogrammer43 [0mâžœ [1;34m/workspaces/csci-330-homeworks-Neoprogrammer43/Hwork2 [0;36m([1;31mmain[0;36m) [0m$ exit

Script done on 2025-02-05 06:04:27+00:00 [COMMAND_EXIT_CODE="0"]
